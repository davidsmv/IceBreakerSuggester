import streamlit as st
from services.langchain.ice_breaker import IceBreaker
import json
from streamlit_lottie import st_lottie

class IceBreakerApp:
    def __init__(self):
        if 'ice_breaker' not in st.session_state:
            st.session_state.ice_breaker = IceBreaker()

    def configure_header(self):
        st.set_page_config(layout='wide')

        st.image("app/services/streamlit/images/header.png",
                 use_column_width=True,
                 caption="Image generated by DALL-E, an AI image generation tool by OpenAI.")

        st.markdown("""
            <style>
            .title {
                text-align: center;
                font-size: 36px;
                font-weight: bold;
                margin-top: 20px;
                margin-bottom: 20px;
            }
            </style>
            <div class="title">IceBreaker Suggester</div>
            """,
            unsafe_allow_html=True)

        st.markdown("""
            ### About This App

            Welcome to my personal project! I'm [**David Mart√≠nez**](https://www.linkedin.com/in/davidsmv/), and this application showcases my skills in **web scraping**, **Streamlit**, and **LangChain** tools.

            #### Project Inspiration
            The concept for this project originated from the Udemy course [_"LangChain - Develop LLM Powered Applications with LangChain"_](https://www.udemy.com/course/langchain/?couponCode=LETSLEARNNOWPP) by Eden Marco. While the foundational idea is derived from this course, I've made several significant modifications to tailor it to my vision.
            Feel free to explore the original project on GitHub for comparison and further understanding: [Original Project by Eden Marco](https://github.com/emarco177/ice_breaker).
                    
            ### Instructions
            The purpose of this project is to provide icebreaker suggestions based on the name and company of the person you specify. Please enter the person's name and company in the appropriate fields to receive the suggestions. **Remember!** If you do not fill in both fields, we will not be able to make suggestions for you.
            """
            )
    
    def display_input_form(self):
        col1, col2 = st.columns(2)
        with col1:
            name = st.text_input('Enter the person\'s name', placeholder='e.g., Bill Gates')
        with col2:
            company = st.text_input('Enter the company where the person works', placeholder='e.g., Microsoft')
        return name, company


    def run(self):
        self.configure_header()
        name, company = self.display_input_form()

        st.write("")  # Add some space

        button_clicked = st.button('Search Info')
        if button_clicked:
            if name and company:
                st.write("Working in the solution...")
            else:
                st.warning("Please fill in both fields to receive suggestions.")

        # name = st.text_input('Enter your name')
        # company = st.text_input('Enter the company where you work')
        # if st.button('Search Info'):
        #     summary_and_facts, topic_of_interest, ice_breakers = self.ice_breaker.generate_ice_breakers(name, company)

        #     st.write("summary_and_facts")
        #     st.json(summary_and_facts)
        #     st.write("topic_of_interest")
        #     st.json(topic_of_interest)
        #     st.write("ice_breakers")
        #     st.json(ice_breakers)


        # with re sponses Strcuture design of the web
        # Test and feedback

        # https://github.com/emarco177/ice_breaker/blob/main/chains/custom_chains.py